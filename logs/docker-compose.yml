services:
  gateway:
    image: gateway
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://admin:$${jhipster.registry.password}@localhost:8761/eureka
      - SPRING_CLOUD_CONFIG_URI=http://admin:$${jhipster.registry.password}@localhost:8761/config
      - SPRING_R2DBC_URL=r2dbc:postgresql://gateway-postgresql:5432/Gateway
      - SPRING_LIQUIBASE_URL=jdbc:postgresql://gateway-postgresql:5432/Gateway
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_ISSUER_URI=http://keycloak:9080/auth/realms/jhipster
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_ID=web_app
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_SECRET=web_app
      - JHIPSTER_SLEEP=0
      - JHIPSTER_REGISTRY_PASSWORD=admin
    ports:
      - 8080:8080
    depends_on:
      jhipster-registry:
        condition: service_healthy
      gateway-postgresql:
        condition: service_healthy
  gateway-postgresql:
    image: postgres:13.4
    environment:
      - POSTGRES_USER=Gateway
      - POSTGRES_PASSWORD=
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - gateway_data:/var/lib/postgresql/data
    healthcheck:
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 120s
      test: pg_isready


  land:
    image: land
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://admin:$${jhipster.registry.password}@localhost:8761/eureka
      - SPRING_CLOUD_CONFIG_URI=http://admin:$${jhipster.registry.password}@localhost:8761/config
      - SPRING_DATASOURCE_URL=jdbc:postgresql://land-postgresql:5432/Land
      - SPRING_LIQUIBASE_URL=jdbc:postgresql://land-postgresql:5432/Land
      - JHIPSTER_CACHE_REDIS_SERVER=redis://land-redis:6379
      - JHIPSTER_CACHE_REDIS_CLUSTER=false
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_ISSUER_URI=http://keycloak:9080/auth/realms/jhipster
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_ID=internal
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_SECRET=internal
      - JHIPSTER_SLEEP=0
      - SPRING_ELASTICSEARCH_REST_URIS=http://land-elasticsearch:9200
      - JHIPSTER_REGISTRY_PASSWORD=admin
      - SERVER_PORT=80
    depends_on:
      jhipster-registry:
        condition: service_healthy
#      land-postgresql:
#        condition: service_healthy
      land-elasticsearch:
        condition: service_healthy
      land-redis:
        condition: service_healthy
      ipfs-host:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 120s
      test: curl -fs http://localhost:80/management/health | grep "UP"
  land-postgresql:
    image: postgres:13.4
    environment:
      - POSTGRES_USER=Land
      - POSTGRES_PASSWORD=
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - land_data:/var/lib/postgresql/data
    healthcheck:
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 120s
      test: pg_isready
  land-elasticsearch:
    image: elasticsearch:7.12.1
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - 9200:9200
      - 9300:9300
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    healthcheck:
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 120s
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
  land-redis:
    image: redis:6.2.5
    ports:
      - 6379:6379
    healthcheck:
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 120s
      test: redis-cli ping


  media:
    image: media
    ports:
      - 8083:80
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://admin:$${jhipster.registry.password}@localhost:8761/eureka
      - SPRING_CLOUD_CONFIG_URI=http://admin:$${jhipster.registry.password}@localhost:8761/config
      - SPRING_DATASOURCE_URL=jdbc:postgresql://media-postgresql:5432/Media
      - SPRING_LIQUIBASE_URL=jdbc:postgresql://media-postgresql:5432/Media
      - JHIPSTER_CACHE_REDIS_SERVER=redis://media-redis:6379
      - JHIPSTER_CACHE_REDIS_CLUSTER=false
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_ISSUER_URI=http://keycloak:9080/auth/realms/jhipster
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_ID=internal
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_SECRET=internal
      - JHIPSTER_SLEEP=0
      - JHIPSTER_REGISTRY_PASSWORD=admin
      - SERVER_PORT=80
    volumes:
      - ./media/raw/images:/media/raw/images
      - ./media/raw/videos:/media/raw/videos
      - ./media/raw/unknown:/media/raw/unknown
    depends_on:
      jhipster-registry:
        condition: service_healthy
      media-postgresql:
        condition: service_healthy
      media-redis:
        condition: service_healthy
      media-imgproxy:
        condition: service_healthy
    healthcheck:
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 120s
      test: curl -fs http://localhost:80/management/health | grep "UP"
  media-postgresql:
    image: postgres:13.4
    environment:
      - POSTGRES_USER=Media
      - POSTGRES_PASSWORD=
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - media_data:/var/lib/postgresql/data
    healthcheck:
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 120s
      test: pg_isready
  media-redis:
    image: redis:6.2.5
    healthcheck:
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 120s
      test: redis-cli ping
  media-imgproxy:
    image: darthsim/imgproxy
    ports:
      - 8082:8080
    environment:
      - IMGPROXY_JPEG_PROGRESSIVE=1
      - IMGPROXY_ENABLE_WEBP_DETECTION=1
      - IMGPROXY_ENFORCE_WEBP=1
      - IMGPROXY_PNG_INTERLACED=1
    restart: on-failure
    healthcheck:
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 120s
      test: [ "CMD", "imgproxy", "health" ]


  transaction:
    image: transaction
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://admin:$${jhipster.registry.password}@localhost:8761/eureka
      - SPRING_CLOUD_CONFIG_URI=http://admin:$${jhipster.registry.password}@localhost:8761/config
      - SPRING_DATASOURCE_URL=jdbc:postgresql://transaction-postgresql:5432/Transaction
      - SPRING_LIQUIBASE_URL=jdbc:postgresql://transaction-postgresql:5432/Transaction
      - JHIPSTER_CACHE_REDIS_SERVER=redis://transaction-redis:6379
      - JHIPSTER_CACHE_REDIS_CLUSTER=false
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_ISSUER_URI=http://keycloak:9080/auth/realms/jhipster
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_ID=internal
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_SECRET=internal
      - JHIPSTER_SLEEP=0
      - JHIPSTER_REGISTRY_PASSWORD=admin
      - SERVER_PORT=80
    depends_on:
      jhipster-registry:
        condition: service_healthy
      transaction-postgresql:
        condition: service_healthy
      transaction-redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 120s
      test: curl -fs http://localhost:80/management/health | grep "UP"
  transaction-postgresql:
    image: postgres:13.4
    environment:
      - POSTGRES_USER=Transaction
      - POSTGRES_PASSWORD=
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - transaction_data:/var/lib/postgresql/data
    healthcheck:
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 120s
      test: pg_isready
  transaction-redis:
    image: redis:6.2.5
    healthcheck:
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 120s
      test: redis-cli ping


  job:
    image: job
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://admin:$${jhipster.registry.password}@localhost:8761/eureka
      - SPRING_CLOUD_CONFIG_URI=http://admin:$${jhipster.registry.password}@localhost:8761/config
      - SPRING_DATASOURCE_URL=jdbc:postgresql://job-postgresql:5432/Job
      - SPRING_LIQUIBASE_URL=jdbc:postgresql://job-postgresql:5432/Job
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_ISSUER_URI=http://keycloak:9080/auth/realms/jhipster
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_ID=internal
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_SECRET=internal
      - JHIPSTER_SLEEP=0
      - JHIPSTER_REGISTRY_PASSWORD=admin
      - SERVER_PORT=80
    depends_on:
      jhipster-registry:
        condition: service_healthy
      job-postgresql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 120s
      test: curl -fs http://localhost:80/management/health | grep "UP"
  job-postgresql:
    image: postgres:13.4
    environment:
      - POSTGRES_USER=Job
      - POSTGRES_PASSWORD=
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - job_data:/var/lib/postgresql/data
    healthcheck:
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 120s
      test: pg_isready


  newfeeds_fpm:
    image: wordpress:php7.3-fpm-alpine
    environment:
      - WORDPRESS_DB_HOST=newfeeds_db:3306
      - WORDPRESS_DB_NAME=mozoland
      - WORDPRESS_DB_USER=newfeeds
      - WORDPRESS_DB_PASSWORD=newfeeds
    volumes:
      - ../NewFeeds:/var/www/html
    depends_on:
      newfeeds_db:
        condition: service_healthy
    restart: unless-stopped
  newfeeds_db:
    image: mysql:5.7
    environment:
      - MYSQL_DATABASE=mozoland
      - MYSQL_USER=newfeeds
      - MYSQL_PASSWORD=newfeeds
      - MYSQL_ROOT_PASSWORD=root
    volumes:
      - newfeeds_data:/var/lib/mysql
    healthcheck:
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 120s
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
  newfeeds:
    depends_on:
      - newfeeds_fpm
      - phpmyadmin
    image: nginx:1.21.3-alpine
    ports:
      - 8081:80
    volumes:
      - ../NewFeeds:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d


  landscan:
    image: landscan
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m --enable-preview
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://admin:$${jhipster.registry.password}@jhipster-registry:8761/eureka
      - SPRING_CLOUD_CONFIG_URI=http://admin:$${jhipster.registry.password}@jhipster-registry:8761/config
      - SPRING_DATA_MONGODB_URI=mongodb://landscan-mongodb:27017
      - SPRING_DATA_MONGODB_DATABASE=LandScan
      - JHIPSTER_CACHE_REDIS_SERVER=redis://landscan-redis:6379
      - JHIPSTER_CACHE_REDIS_CLUSTER=false
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_ISSUER_URI=http://keycloak:9080/auth/realms/jhipster
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_ID=internal
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_SECRET=internal
      - JHIPSTER_SLEEP=0
      - JHIPSTER_REGISTRY_PASSWORD=admin
      - SERVER_PORT=80
      - SPRING_RABBITMQ_HOST=rabbitmq
    depends_on:
      jhipster-registry:
        condition: service_healthy
      landscan-mongodb:
        condition: service_healthy
      landscan-redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 120s
      test: curl -fs http://localhost:80/management/health | grep "UP"
  landscan-mongodb:
    image: mongo:5.0.5-focal
    volumes:
      - landscan_data:/data/db
    healthcheck:
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 120s
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
  landscan-redis:
    image: redis:6.2.5
    healthcheck:
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 120s
      test: redis-cli ping


  jhipster-registry:
    image: jhipster/jhipster-registry:v7.1.0
    volumes:
      - ./central-server-config:/central-config
    # By default the JHipster Registry runs with the "dev" and "native"
    # Spring profiles.
    # "native" profile means the filesystem is used to store data, see
    # http://cloud.spring.io/spring-cloud-config/spring-cloud-config.html
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - JHIPSTER_SLEEP=0
      - SPRING_PROFILES_ACTIVE=dev,oauth2
      - SPRING_SECURITY_USER_PASSWORD=admin
      - JHIPSTER_REGISTRY_PASSWORD=admin
      - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_TYPE=native
      - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_SEARCH_LOCATIONS=file:./central-config
      # - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_TYPE=git
      # - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_URI=https://github.com/jhipster/jhipster-registry/
      # - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_SEARCH_PATHS=central-config
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
      # For Keycloak to work, you need to add '127.0.0.1 keycloak' to your hosts file
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_ISSUER_URI=http://keycloak:9080/auth/realms/jhipster
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_ID=jhipster-registry
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_SECRET=jhipster-registry
    ports:
      - 8761:8761
    depends_on:
      keycloak:
        condition: service_healthy
    healthcheck:
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 120s
      test: curl http://localhost:8761/management/health || exit 1
  keycloak:
    image: jboss/keycloak:16.1.0
    command:
      [
        "-b",
        "0.0.0.0",
        "-Dkeycloak.migration.action=import",
        "-Dkeycloak.migration.provider=dir",
        "-Dkeycloak.migration.dir=/opt/jboss/keycloak/realm-config",
        "-Dkeycloak.migration.strategy=OVERWRITE_EXISTING",
        "-Djboss.socket.binding.port-offset=1000",
        # "-Dkeycloak.profile=preview",
        "-Dkeycloak.profile.feature.upload_scripts=enabled",
        # "-Dkeycloak.profile.feature.account_api=enabled",
      ]
    volumes:
      - ./realm-config:/opt/jboss/keycloak/realm-config
      - ./realm-config/disable-theme-cache.cli:/opt/jboss/startup-scripts/disable-theme-cache.cli
      - ../Keycloak/themes:/opt/jboss/keycloak/themes
      - ../Keycloak/CustomProviders/sms-authenticator/target/keycloak-otp-authenticator-1.0.jar:/opt/jboss/keycloak/standalone/deployments/keycloak-otp-authenticator-1.0.jar
    environment:
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
      - KEYCLOAK_FRONTEND_URL=http://keycloak:9080/auth
      - DB_VENDOR=h2
    ports:
      - 9080:9080
      - 9443:9443
      - 10990:10990
    healthcheck:
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 120s
      test: curl -fs http://localhost:9080/auth/realms/master


  prometheus:
    image: prom/prometheus:v2.29.2
    volumes:
      - ./prometheus-conf/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - 9090:9090
  alertmanager:
    image: prom/alertmanager:v0.23.0
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager-conf/:/etc/alertmanager/
    command:
      - "--config.file=/etc/alertmanager/config.yml"
      - "--storage.path=/alertmanager"

  grafana:
    image: grafana/grafana:8.1.3
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana-conf/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - loki
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
  loki:
    image: grafana/loki:2.4.1
    command: -config.file=/mnt/loki-local-config.yaml
    user: root
    restart: unless-stopped
    volumes:
      - loki_data:/tmp/loki
      - ./grafana-conf/loki.yml:/mnt/loki-local-config.yaml
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
  fluent-bit:
    image: grafana/fluent-bit-plugin-loki:latest
    environment:
      - LOKI_URL=http://loki:3100/loki/api/v1/push
    volumes:
      - ./fluent-bit-conf/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf


  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@biglabs.com
      PGADMIN_DEFAULT_PASSWORD: 123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin-conf/servers.json:/pgadmin4/servers.json
    ports:
      - 9990:80
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - 9991:80
    environment:
      - PMA_HOST=newfeeds_db
      - MYSQL_ROOT_PASSWORT=root


  ipfs-host:
    image: ipfs/go-ipfs
    ports:
      - 4001:4001
      - 5001:5001
    user: "ipfs"
    command: [ "daemon", "--enable-pubsub-experiment" ]
    volumes:
      - ipfs_data:/data/ipfs
      - ipfs_fuse:/ipfs
      - ipns_fuse:/ipns
    healthcheck:
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 120s
      test: wget "https://ipfs.io/ipfs/QmUNLLsPACCz1vLxQVkXqqLX5R1X345qqfHbsf67hvA3Nn" -O /dev/null &> /dev/null

  local_blockchain:
    image: local_blockchain
    volumes:
      - ../SmartContracts:/usr/src/app
    ports:
      - 8545:8545

  rabbitmq:
    image: rabbitmq:3.9.10-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./rabbitmq-conf/plugins/rabbitmq_delayed_message_exchange-3.9.0.ez:/opt/rabbitmq/plugins/rabbitmq_delayed_message_exchange-3.9.0.ez
      - ./rabbitmq-conf/enabled_plugins:/etc/rabbitmq/enabled_plugins
      - rabbitmq_data:/var/lib/rabbitmq/
      - rabbitmq_log:/var/log/rabbitmq
    healthcheck:
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 120s
      test: rabbitmq-diagnostics -q ping


volumes:
  prometheus_data: {}
  loki_data: {}
  grafana_data: {}
  gateway_data: {}
  land_data: {}
  media_data: {}
  transaction_data: {}
  job_data: {}
  newfeeds_data: {}
  landscan_data: {}
  rabbitmq_data: {}
  rabbitmq_log: {}
  pgadmin_data: {}
  ipfs_data: {}
  ipfs_fuse: {}
  ipns_fuse: {}
