version: "3"
services:
  db:
    image: postgres
    environment:
      POSTGRES_PASSWORD: dbpass
      POSTGRES_DB: keycloak
    ports:
      - "5432:5432"
    volumes:
      - ./db:/var/lib/postgresql/data
    networks:
      - app-network
  # node-service:
  #   build: ./node-service
  #   volumes:
  #     - ./node-service:/usr/src/app
  #   ports:
  #     - "3000"
  #   networks:
  #     - app-network
  # rest-service:
  #   build: ./rest-service
  #   ports:
  #     - "8080"
  #   networks:
  #     - app-network
  #   depends_on:
  #     - idp
  nginx:
    build: ./nginx
    ports:
      - "80:80"
      - "8091:8091"
      - "8092:8092"
      - "9433:9433"
      - "8093:8093"
      - "8094:8094"
      - "8027:8027"
    networks:
      - app-network
  idp:
    build: ./idp
    command: start
    volumes:
      - ./logs:/logs
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: pass
      KC_HOSTNAME: local.guava.ccc-jaguar-nug.co
      KC_HOSTNAME_ADMIN_URL: https://local.guava.ccc-jaguar-nug.co:8092
      KC_HOSTNAME_PORT: "8092"
      KC_HOSTNAME_DEBUG: "true"
      KC_HTTP_ENABLED: "true"
      KC_HTTPS_PORT: "8433"
      KC_PROXY: "edge"
      KC_DB: "postgres"
      KC_DB_URL: "jdbc:postgresql://db:5432/keycloak"
      KC_DB_USERNAME: "postgres"
      KC_DB_PASSWORD: "dbpass"
    ports:
      - "8080"
      - "8433"
    networks:
      - app-network
    depends_on:
      - db
  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - app-network
networks:
  app-network:
    driver: bridge
